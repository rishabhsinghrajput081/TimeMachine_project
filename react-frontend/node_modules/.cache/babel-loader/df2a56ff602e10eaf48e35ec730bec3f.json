{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/components/src/comp/LoadingPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport './LoadingPage.css'; // Import your CSS for styling\n\nconst LoadingPage = () => {\n  const [isVideoReady, setIsVideoReady] = useState(false);\n  const handleVideoLoad = () => {\n    setIsVideoReady(true); // Set video as ready once it loads\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, !isVideoReady && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 31\n    }\n  }, \"Loading video, please wait...\"), \" \", /*#__PURE__*/React.createElement(\"video\", {\n    className: \"video-background\",\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    onLoadedData: handleVideoLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: `${process.env.PUBLIC_URL}/path_to_your_video.mp4`,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }), \"Your browser does not support the video tag.\"));\n};\nexport default LoadingPage;","map":{"version":3,"names":["React","useEffect","useState","LoadingPage","isVideoReady","setIsVideoReady","handleVideoLoad","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","loop","muted","onLoadedData","src","process","env","PUBLIC_URL","type"],"sources":["/Users/mayank/Desktop/components/src/comp/LoadingPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './LoadingPage.css'; // Import your CSS for styling\n\nconst LoadingPage = () => {\n    const [isVideoReady, setIsVideoReady] = useState(false);\n\n    const handleVideoLoad = () => {\n        setIsVideoReady(true); // Set video as ready once it loads\n    };\n\n    return (\n        <div className=\"loading-container\">\n            {!isVideoReady && <h2>Loading video, please wait...</h2>} {/* Loading placeholder */}\n            <video className=\"video-background\" autoPlay loop muted onLoadedData={handleVideoLoad}>\n                <source src={`${process.env.PUBLIC_URL}/path_to_your_video.mp4`} type=\"video/mp4\" />\n                Your browser does not support the video tag.\n            </video>\n        </div>\n    );\n};\n\nexport default LoadingPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB,CAAC,CAAC;;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC1BD,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,oBACIL,KAAA,CAAAO,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7B,CAACV,YAAY,iBAAIJ,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,+BAAiC,CAAC,EAAC,GAAC,eAC1Dd,KAAA,CAAAO,aAAA;IAAOC,SAAS,EAAC,kBAAkB;IAACO,QAAQ;IAACC,IAAI;IAACC,KAAK;IAACC,YAAY,EAAEZ,eAAgB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClFd,KAAA,CAAAO,aAAA;IAAQY,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,yBAA0B;IAACC,IAAI,EAAC,WAAW;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gDAEjF,CACN,CAAC;AAEd,CAAC;AAED,eAAeX,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}