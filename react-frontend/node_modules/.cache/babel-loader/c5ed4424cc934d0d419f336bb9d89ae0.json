{"ast":null,"code":"var _jsxFileName = \"/Users/mayank/Desktop/components/src/comp/PopupCard.js\";\nimport React, { useState } from 'react';\nimport PopupCard from './PopupCard'; // Import the PopupCard component\n\nconst GlobalMap = () => {\n  const [selectedPoint, setSelectedPoint] = useState(null);\n  const points = [{\n    id: 1,\n    title: 'Warrior',\n    name: 'Geralt of Rivia',\n    description: 'A skilled Witcher and monster hunter.',\n    imgUrl: '/profile.jpg',\n    // Path to the image in the public folder\n    detailedPageUrl: '/geralt-details',\n    top: '20%',\n    left: '40%'\n  }\n  // Add more points here\n  ];\n  const handlePointClick = point => {\n    setSelectedPoint(point);\n  };\n  const handleClosePopup = () => {\n    setSelectedPoint(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"global-map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, points.map(point => /*#__PURE__*/React.createElement(\"div\", {\n    key: point.id,\n    className: \"map-point\",\n    style: {\n      top: point.top,\n      left: point.left\n    },\n    onClick: () => handlePointClick(point),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\u2022\")), selectedPoint && /*#__PURE__*/React.createElement(PopupCard, {\n    title: selectedPoint.title,\n    name: selectedPoint.name,\n    description: selectedPoint.description,\n    imgUrl: selectedPoint.imgUrl // Remove the JSX comment\n    ,\n    detailedPageUrl: selectedPoint.detailedPageUrl,\n    onClose: handleClosePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }));\n};\nexport default GlobalMap;","map":{"version":3,"names":["React","useState","PopupCard","GlobalMap","selectedPoint","setSelectedPoint","points","id","title","name","description","imgUrl","detailedPageUrl","top","left","handlePointClick","point","handleClosePopup","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","style","onClick","onClose"],"sources":["/Users/mayank/Desktop/components/src/comp/PopupCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PopupCard from './PopupCard'; // Import the PopupCard component\n\nconst GlobalMap = () => {\n    const [selectedPoint, setSelectedPoint] = useState(null);\n\n    const points = [\n        {\n            id: 1,\n            title: 'Warrior',\n            name: 'Geralt of Rivia',\n            description: 'A skilled Witcher and monster hunter.',\n            imgUrl: '/profile.jpg', // Path to the image in the public folder\n            detailedPageUrl: '/geralt-details',\n            top: '20%',\n            left: '40%'\n        },\n        // Add more points here\n    ];\n\n    const handlePointClick = (point) => {\n        setSelectedPoint(point);\n    };\n\n    const handleClosePopup = () => {\n        setSelectedPoint(null);\n    };\n\n    return (\n        <div className=\"global-map\">\n            {/* Map points */}\n            {points.map((point) => (\n                <div\n                    key={point.id}\n                    className=\"map-point\"\n                    style={{ top: point.top, left: point.left }}\n                    onClick={() => handlePointClick(point)}\n                >\n                    â€¢\n                </div>\n            ))}\n\n            {/* Show the popup card for the selected point */}\n            {selectedPoint && (\n                <PopupCard\n                title={selectedPoint.title}\n                name={selectedPoint.name}\n                description={selectedPoint.description}\n                imgUrl={selectedPoint.imgUrl}  // Remove the JSX comment\n                detailedPageUrl={selectedPoint.detailedPageUrl}\n                onClose={handleClosePopup}\n            />\n            \n            )}\n        </div>\n    );\n};\n\nexport default GlobalMap;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMK,MAAM,GAAG,CACX;IACIC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE,iBAAiB;IACvBC,WAAW,EAAE,uCAAuC;IACpDC,MAAM,EAAE,cAAc;IAAE;IACxBC,eAAe,EAAE,iBAAiB;IAClCC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE;EACV;EACA;EAAA,CACH;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAChCX,gBAAgB,CAACW,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3BZ,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIL,KAAA,CAAAkB,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEtBnB,MAAM,CAACoB,GAAG,CAAEV,KAAK,iBACdhB,KAAA,CAAAkB,aAAA;IACIS,GAAG,EAAEX,KAAK,CAACT,EAAG;IACdY,SAAS,EAAC,WAAW;IACrBS,KAAK,EAAE;MAAEf,GAAG,EAAEG,KAAK,CAACH,GAAG;MAAEC,IAAI,EAAEE,KAAK,CAACF;IAAK,CAAE;IAC5Ce,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACC,KAAK,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1C,QAEI,CACR,CAAC,EAGDrB,aAAa,iBACVJ,KAAA,CAAAkB,aAAA,CAAChB,SAAS;IACVM,KAAK,EAAEJ,aAAa,CAACI,KAAM;IAC3BC,IAAI,EAAEL,aAAa,CAACK,IAAK;IACzBC,WAAW,EAAEN,aAAa,CAACM,WAAY;IACvCC,MAAM,EAAEP,aAAa,CAACO,MAAO,CAAE;IAAA;IAC/BC,eAAe,EAAER,aAAa,CAACQ,eAAgB;IAC/CkB,OAAO,EAAEb,gBAAiB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC7B,CAGA,CAAC;AAEd,CAAC;AAED,eAAetB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}